# This file contains the default configuration for the flash loader.
core:
  # defines the loader
  loader: flash
  # Since this will run on maxwell most probably, we have a lot of cores at our disposal
  num_cores: 100
  # the beamline where experiment took place
  beamline: pg2
  # the ID number of the beamtime
  beamtime_id: 11019101
  # the year of the beamtime
  year: 2023
  # the instrument used
  instrument: hextof # hextof, wespe, etc
  # The paths to the raw and parquet data directories. If these are not
  # provided, the loader will try to find the data based on year beamtimeID etc
  # paths:
  # # location of the raw data.
  #  raw: ""
  # # location of the intermediate parquet files.
  #  processed: ""
  # The prefixes of the stream names for different DAQ systems for parsing filenames
  stream_name_prefixes:
    pbd: "GMD_DATA_gmd_data"
    pbd2: "FL2PhotDiag_pbd2_gmd_data"
    fl1user1: "FLASH1_USER1_stream_2"
    fl1user2: "FLASH1_USER2_stream_2"
    fl1user3: "FLASH1_USER3_stream_2"
    fl2user1: "FLASH2_USER1_stream_2"
    fl2user2: "FLASH2_USER2_stream_2"
  # The beamtime directories for different DAQ systems.
  # (Not to be changed by user)
  beamtime_dir:
    pg2: "/asap3/flash/gpfs/pg2/"

binning:
  # Histogram computation mode to use.
  hist_mode: "numba"
  # Mode for histogram recombination to use
  mode: fast
  # Whether to display a progress bar
  pbar: True
  # Number of multithreading threads per worker thread
  threads_per_worker: 4
  # API for numpy multithreading
  threadpool_API: "blas"

dataframe:
  daq: fl1user3                                   # DAQ system name to resolve filenames/paths
  ubid_offset: 5                                  # Offset correction to the pulseId
  forward_fill_iterations: 2                      # Number of iterations to fill the pulseId forward
  split_sector_id_from_dld_time: True             # Remove reserved bits for dldSectorID from dldTimeSteps column
  sector_id_reserved_bits: 3                      # Bits reserved for dldSectorID in the dldTimeSteps column
  sector_delays: [0., 0., 0., 0., 0., 0., 0., 0.] # Sector delays

  # Time and binning settings
  tof_binwidth: 2.0576131995767355E-11            # Base time-of-flight bin width in seconds
  tof_binning: 8                                  # Binning parameter for time-of-flight data

  # Columns used for jitter correction
  jitter_cols: [dldPosX, dldPosY, dldTimeSteps]

  # Column settings
  columns:
    x: dldPosX
    corrected_x: X
    kx: kx
    y: dldPosY
    corrected_y: Y
    ky: ky
    tof: dldTimeSteps
    tof_ns: dldTime
    corrected_tof: tm
    timestamp: timeStamp
    auxiliary: dldAux
    sector_id: dldSectorID
    delay: delayStage
    corrected_delay: pumpProbeTime

  # These are the units of the columns
  units:
    dldPosX: 'step'
    dldPosY: 'step'
    dldTimeSteps: 'step'
    tof_voltage: 'V'
    extractorVoltage: 'V'
    extractorCurrent: 'A'
    cryoTemperature: 'K'
    sampleTemperature: 'K'
    dldTime: 'ns'
    delay: 'ps'
    delayStage: 'ps'
    timeStamp: 's'
    energy: 'eV'
    E: 'eV'
    kx: '1/A'
    ky: '1/A'

  # The channels to load from the raw data. The channels have the following structure:
  # channels have the following structure:
  # <channelAlias>:
  #   format: per_pulse/per_electron/per_train
  #   index_key: the hdf5 index key
  #   dataset_key: the hdf5 dataset key
  #   slice: int to slice a multidimensional data along axis=1. If not defined, there is no slicing
  #   dtype: the datatype of the data
  #   subChannels: further aliases for if the data is multidimensional and needs to be split in different cols
  #                used currently for the auxiliary channel
  #      <subChannelAlias>:
  #        slice: int to slice a multidimensional data along axis=1. Must be defined
  #        dtype: the datatype of the data

  channels:
    # The timestamp
    timeStamp:
      format: per_train
      index_key: "/uncategorised/FLASH.DIAG/TIMINGINFO/TIME1.BUNCH_FIRST_INDEX.1/index"
      dataset_key: "/uncategorised/FLASH.DIAG/TIMINGINFO/TIME1.BUNCH_FIRST_INDEX.1/time"

    # pulse ID is a necessary channel for using the loader.
    pulseId:
      format: per_electron
      index_key: "/uncategorised/FLASH.EXP/HEXTOF.DAQ/DLD1/index"
      dataset_key: "/uncategorised/FLASH.EXP/HEXTOF.DAQ/DLD1/value"
      slice: 2
      dtype: uint16

    # detector x position
    dldPosX:
      format: per_electron
      index_key: "/uncategorised/FLASH.EXP/HEXTOF.DAQ/DLD1/index"
      dataset_key: "/uncategorised/FLASH.EXP/HEXTOF.DAQ/DLD1/value"
      slice: 1
      dtype: uint16

    # detector y position
    dldPosY:
      format: per_electron
      index_key: "/uncategorised/FLASH.EXP/HEXTOF.DAQ/DLD1/index"
      dataset_key: "/uncategorised/FLASH.EXP/HEXTOF.DAQ/DLD1/value"
      slice: 0
      dtype: uint16

    # Detector time-of-flight channel
    # if split_sector_id_from_dld_time is set to True, This this will generate
    # also the dldSectorID channel
    dldTimeSteps:
      format: per_electron
      index_key: "/uncategorised/FLASH.EXP/HEXTOF.DAQ/DLD1/index"
      dataset_key: "/uncategorised/FLASH.EXP/HEXTOF.DAQ/DLD1/value"
      slice: 3
      dtype: uint32

    # The auxiliary channel has a special structure where the group further contains
    # a multidimensional structure so further aliases are defined below
    dldAux:
      format: per_train
      index_key: "/uncategorised/FLASH.EXP/HEXTOF.DAQ/DLD1/index"
      dataset_key: "/uncategorised/FLASH.EXP/HEXTOF.DAQ/DLD1/value"
      slice: 4
      sub_channels:
        sampleBias:
          slice: 0
          dtype: float32
        tofVoltage:
          slice: 1
          dtype: float64
        extractorVoltage:
          slice: 2
        extractorCurrent:
          slice: 3
        cryoTemperature:
          slice: 4
        sampleTemperature:
          slice: 5
        dldTimeBinSize:
          slice: 15

    # ADC containing the pulser sign (1: value approx. 35000, 0: 33000)
    pulserSignAdc:
      format: per_pulse
      index_key: "/FL1/Experiment/PG/SIS8300 100MHz ADC/CH6/TD/index"
      dataset_key: "/FL1/Experiment/PG/SIS8300 100MHz ADC/CH6/TD/value"

    # the energy of the monochromatized beam. This is a quasi-static value.
    # there is a better channel which still needs implementation.
    monochromatorPhotonEnergy:
      format: per_train
      index_key: "/FL1/Beamlines/PG/Monochromator/monochromator photon energy/index"
      dataset_key: "/FL1/Beamlines/PG/Monochromator/monochromator photon energy/value"

    # The GMDs can not be read yet...
    gmdBda:
      format: per_train
      index_key: "/FL1/Photon Diagnostic/GMD/Average energy/energy BDA/index"
      dataset_key: "/FL1/Photon Diagnostic/GMD/Average energy/energy BDA/value"

    # Beam Arrival Monitor, vital for pump-probe experiments as it can compensate sase
    # timing fluctuations.
    # Here we use the DBC2 BAM as the "normal" one is broken.
    bam:
        format: per_pulse
        index_key: "/uncategorised/FLASH.SDIAG/BAM.DAQ/FL0.DBC2.ARRIVAL_TIME.ABSOLUTE.SA1.COMP/index"
        dataset_key: "/uncategorised/FLASH.SDIAG/BAM.DAQ/FL0.DBC2.ARRIVAL_TIME.ABSOLUTE.SA1.COMP/value"

    # The delay Stage position, encoding the pump-probe delay
    delayStage:
      format: per_train
      index_key: "/zraw/FLASH.SYNC/LASER.LOCK.EXP/F1.PG.OSC/FMC0.MD22.1.ENCODER_POSITION.RD/dGroup/index"
      dataset_key: "/zraw/FLASH.SYNC/LASER.LOCK.EXP/F1.PG.OSC/FMC0.MD22.1.ENCODER_POSITION.RD/dGroup/value"

# metadata collection from scicat
# metadata:
#   scicat_url: <URL>
#   scicat_token: <TOKEN>

# The nexus collection routine shall be finalized soon for both instruments
nexus:
  reader: "mpes"
  definition: "NXmpes"
  input_files: ["../src/sed/config/NXmpes_config-HEXTOF.json"]
