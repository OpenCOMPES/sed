name: Publish to PyPI

# Workflow runs prerelease job on every push to main branch
# and a release job on every tag push.
# A publish job is executed on every successful prerelease or release job
# And if publish is successful, the version is also updated in the pyproject.toml file and pushed to main branch
  # By default, a workflow run that is triggered by a push event will
  # not trigger another push event when it pushes changes to the repository.
# The package is distributed as sed-processor
on:
  push:
    branches:
      - main
    tags:
      - '*'
    paths:
      - sed/**/*
      - pyproject.toml
jobs:
  prerelease:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true
          path: 'sed-processor'

      - name: "Setup Python, Poetry and Dependencies"
        uses: zain-sohail/action-setup-cache-python-poetry@main
        with:
          python-version: 3.8
          poetry-version: 1.2.2
          working-directory: sed-processor

      - name: Change to distribution name in toml file
        run: |
          cd sed-processor
          sed -i 's/name = "sed"/name = "sed-processor"/' pyproject.toml

      - name: bump pre-release version
        id: version
        working-directory: sed-processor
        run: |
          VERSION=$(poetry version -s prerelease)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          poetry build

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: sed-processor/dist

      - name: Upload pyproject.toml
        uses: actions/upload-artifact@v3
        with:
          name: pyproject
          path: sed-processor/pyproject.toml

  release:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true
          path: 'sed-processor'

      - name: "Setup Python, Poetry and Dependencies"
        uses: zain-sohail/action-setup-cache-python-poetry@main
        with:
          python-version: 3.8
          poetry-version: 1.2.2
          working-directory: sed-processor

      - name: Change to distribution name in toml file
        run: |
          cd sed-processor
          sed -i 's/name = "sed"/name = "sed-processor"/' pyproject.toml

      - name: Bump release version and build
        id: version
        working-directory: sed-processor
        run: |
          VERSION=$(echo ${GITHUB_REF#refs/tags/v} | sed 's/-.*//')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          poetry version $VERSION
          poetry build

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: sed-processor/dist

      - name: Upload pyproject.toml
        uses: actions/upload-artifact@v3
        with:
          name: pyproject
          path: sed-processor/pyproject.toml

  publish:
    needs: [prerelease, release]
    if: always() && (needs.prerelease.result == 'success' || needs.release.result == 'success')
    runs-on: ubuntu-latest
    outputs:
      version: ${{ needs.prerelease.outputs.version || needs.release.outputs.version }}
    environment:
        name: pypi
        url: https://pypi.org/p/sed-processor
    permissions:
        id-token: write

    steps:
      - name: Download a single artifact
        uses: actions/download-artifact@v3
        with:
          name: dist

      - name: Publish package distributions to PyPI Test
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: .

  bump-version:
    needs: publish
    if: always() && (needs.publish.result == 'success')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true
          path: 'sed-processor'

      - name: Download pyproject.toml
        uses: actions/download-artifact@v3
        with:
          name: pyproject
          path: sed-processor

      # new_branch set for cases when tagging a release
      - name: Commit changes
        uses: EndBug/add-and-commit@v9
        with:
          default_author: github_actions
          message: 'bump version to ${{ needs.publish.outputs.version  }}'
          add: pyproject.toml
          cwd: sed-processor
          new_branch: main
          # By default, a workflow run that is triggered by a push event will
          # not trigger another push event when it pushes changes to the repository.
          # So no problem here.
